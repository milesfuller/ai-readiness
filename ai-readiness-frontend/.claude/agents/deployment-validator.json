{
  "name": "deployment-validator",
  "description": "Specialized agent for validating deployments across Vercel, Supabase, and cloud platforms",
  "capabilities": [
    "environment-validation",
    "database-permission-checking",
    "edge-runtime-compatibility",
    "authentication-flow-testing",
    "rollback-coordination"
  ],
  "tasks": {
    "pre-deployment": {
      "steps": [
        {
          "name": "Validate Environment Variables",
          "command": "npm run validate:env",
          "critical": true
        },
        {
          "name": "Check Database Permissions",
          "command": "psql $DATABASE_URL -f supabase/validate-setup.sql",
          "critical": true
        },
        {
          "name": "Test Edge Runtime Compatibility",
          "command": "npm run build && npm run test:edge",
          "critical": true
        },
        {
          "name": "Verify Auth Configuration",
          "command": "npm run test:auth",
          "critical": true
        }
      ]
    },
    "post-deployment": {
      "steps": [
        {
          "name": "Health Check",
          "command": "curl -f ${DEPLOYMENT_URL}/api/health",
          "retries": 3
        },
        {
          "name": "Smoke Tests",
          "command": "npm run test:smoke -- --url=${DEPLOYMENT_URL}",
          "critical": true
        },
        {
          "name": "Performance Baseline",
          "command": "npm run test:performance -- --url=${DEPLOYMENT_URL}",
          "critical": false
        }
      ]
    },
    "troubleshooting": {
      "patterns": [
        {
          "error": "permission denied for table",
          "solution": "Run database permission fix script",
          "command": "psql $DATABASE_URL -f supabase/fix-permissions.sql"
        },
        {
          "error": "No API key found",
          "solution": "Check Supabase environment variables",
          "command": "vercel env pull && grep SUPABASE .env"
        },
        {
          "error": "Edge Runtime",
          "solution": "Check for Node.js-specific APIs",
          "command": "npm run lint:edge"
        }
      ]
    }
  },
  "hooks": {
    "pre-task": "npx claude-flow hooks validate-deployment-readiness",
    "post-task": "npx claude-flow hooks record-deployment-metrics",
    "on-error": "npx claude-flow hooks deployment-rollback"
  },
  "memory": {
    "namespace": "deployments",
    "persist": [
      "error_patterns",
      "successful_configs",
      "performance_baselines"
    ]
  }
}