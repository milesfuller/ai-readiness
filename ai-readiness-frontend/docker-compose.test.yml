# Docker Compose for AI Readiness E2E Test Environment
# Optimized for fast setup/teardown with isolated test database

version: '3.8'

name: ai-readiness-e2e-test

services:
  # PostgreSQL Database - Isolated test instance
  test-db:
    container_name: ai-readiness-test-db
    image: supabase/postgres:15.1.0.147
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: 5432
      POSTGRES_PORT: 5432
      PGPASSWORD: test_postgres_password
      POSTGRES_PASSWORD: test_postgres_password
      PGDATABASE: ai_readiness_test
      POSTGRES_DB: ai_readiness_test
      POSTGRES_USER: postgres
      # Test-specific settings
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
      # JWT settings for Supabase auth
      JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      JWT_EXP: 3600
    ports:
      - "54322:5432"
    volumes:
      # Initialize test database
      - ./docker/test-db-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./supabase/migrations:/docker-entrypoint-initdb.d/migrations:ro
      - ./docker/test-data:/docker-entrypoint-initdb.d/test-data:ro
      # Persistent data for debugging
      - test-db-data:/var/lib/postgresql/data
    command:
      - postgres
      - -c
      - log_min_messages=warning
      - -c
      - log_statement=none
      - -c
      - shared_preload_libraries=pg_stat_statements

  # GoTrue Authentication Server - Test mode
  test-auth:
    container_name: ai-readiness-test-auth
    image: supabase/gotrue:v2.151.0
    restart: unless-stopped
    depends_on:
      test-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9999/health"]
      timeout: 5s
      interval: 5s
      retries: 3
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:54321
      
      # Database connection
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:test_postgres_password@test-db:5432/ai_readiness_test
      
      # Site URLs
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: "http://localhost:3000/**,http://localhost:54321/**,http://localhost:54323/**"
      
      # Auth settings - permissive for testing
      GOTRUE_DISABLE_SIGNUP: false
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      
      # Email settings
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: false
      GOTRUE_MAILER_AUTOCONFIRM: true
      
      # SMTP (test mail server)
      GOTRUE_SMTP_ADMIN_EMAIL: admin@test.com
      GOTRUE_SMTP_HOST: test-mail
      GOTRUE_SMTP_PORT: 1025
      GOTRUE_SMTP_USER: ""
      GOTRUE_SMTP_PASS: ""
      GOTRUE_SMTP_SENDER_NAME: "E2E Test Mailer"
      
      # Rate limiting - disabled for testing
      GOTRUE_RATE_LIMIT_HEADER: ""
      GOTRUE_RATE_LIMIT_EMAIL_SENT: 1000
      GOTRUE_RATE_LIMIT_SMS_SENT: 1000
      GOTRUE_RATE_LIMIT_VERIFY: 1000
      GOTRUE_RATE_LIMIT_TOKEN_REFRESH: 1000
      
      # Password settings - relaxed for testing
      GOTRUE_PASSWORD_MIN_LENGTH: 6
      GOTRUE_SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION: false
    ports:
      - "54325:9999"

  # PostgREST API Server - Test mode
  test-rest:
    container_name: ai-readiness-test-rest
    image: postgrest/postgrest:v12.0.1
    restart: unless-stopped
    depends_on:
      test-db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://authenticator:test_postgres_password@test-db:5432/ai_readiness_test
      PGRST_DB_SCHEMAS: public,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_APP_SETTINGS_JWT_EXP: 3600
    ports:
      - "54326:3000"

  # Kong API Gateway - Test configuration
  test-kong:
    container_name: ai-readiness-test-kong
    image: kong:2.8.1
    restart: unless-stopped
    depends_on:
      test-auth:
        condition: service_healthy
      test-rest:
        condition: service_started
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      # Test keys
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
    ports:
      - "54321:8000"
      - "54327:8443"
    volumes:
      - ./docker/kong-test.yml:/var/lib/kong/kong.yml:ro

  # Test Mail Server (MailHog)
  test-mail:
    container_name: ai-readiness-test-mail
    image: mailhog/mailhog:v1.0.1
    restart: unless-stopped
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /maildir
    ports:
      - "54324:8025"  # Web interface
      - "1025:1025"   # SMTP
    volumes:
      - test-mail-data:/maildir

  # Redis for caching and sessions
  test-redis:
    container_name: ai-readiness-test-redis
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "54328:6379"
    volumes:
      - test-redis-data:/data

volumes:
  test-db-data:
    driver: local
  test-mail-data:
    driver: local
  test-redis-data:
    driver: local

networks:
  default:
    name: ai-readiness-e2e-network
    driver: bridge