{
  "name": "ai-readiness-frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "validate:contracts": "node scripts/validate-contracts.js",
    "validate:schema": "node scripts/validate-schema.js",
    "validate:contract-suite": "npm run validate:contracts && npm run validate:schema",
    "test:contracts": "vitest run tests/contracts.test.ts",
    "precommit:contracts": "npm run validate:contract-suite && npm run test:contracts",
    "dev": "npm run validate:contracts && next dev",
    "build": "node scripts/build-safe.js",
    "build:next": "next build",
    "build:unsafe": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "migrate": "node scripts/run-migrations.js",
    "migrate:status": "curl http://localhost:3000/api/migrations",
    "migrate:prod": "MIGRATION_ADMIN_TOKEN=$MIGRATION_ADMIN_TOKEN curl -X POST http://localhost:3000/api/migrations -H 'Authorization: Bearer $MIGRATION_ADMIN_TOKEN'",
    "validate:components": "node .claude/hooks/validate-components.js",
    "validate:components:all": "VALIDATE_ALL_FILES=true node .claude/hooks/validate-components.js",
    "validate:components:fix": "node .claude/hooks/validate-components.js --fix",
    "validate:components:ci": "node scripts/ci-component-validation.js",
    "validate:components:ci:json": "VALIDATION_REPORT_FORMAT=json node scripts/ci-component-validation.js",
    "validate:components:ci:junit": "VALIDATION_REPORT_FORMAT=junit node scripts/ci-component-validation.js",
    "validate:local": "./scripts/local-deploy-validate.sh",
    "validate:deployment": "node scripts/validate-deployment.js",
    "validate": "node .claude/hooks/validate-wrapper.js",
    "validate:file": "node .claude/hooks/validate-wrapper.js full",
    "validate:pre": "node .claude/hooks/validate-wrapper.js pre",
    "validate:post": "node .claude/hooks/validate-wrapper.js post",
    "validate:report": "node .claude/hooks/validate-wrapper.js report",
    "validate:all": "npm run validate:components:all && npm run type-check && npm run lint && npm run validate:report",
    "generate:openapi": "npx tsx lib/openapi/generator.ts",
    "docs:serve": "open http://localhost:3000/api/docs",
    "docs:generate": "npm run generate:openapi && echo '✅ OpenAPI docs generated at /api/docs'",
    "docs:validate": "swagger-codegen validate -i lib/openapi/swagger.json || echo '⚠️ Install swagger-codegen for validation'",
    "test:e2e": "playwright test --reporter=dot --max-failures=5",
    "test:e2e:simple": "playwright test --reporter=dot --max-failures=1 --timeout=30000",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:stable:playwright": "playwright test --config playwright.config.stable.ts",
    "test:e2e:stable:playwright:debug": "playwright test --config playwright.config.stable.ts --debug",
    "test:e2e:login": "playwright test auth-login-redirect.spec.ts",
    "test:e2e:local": "playwright test --config playwright.config.test.ts",
    "test:e2e:enhanced": "playwright test --config playwright.config.e2e.ts",
    "test:e2e:working": "playwright test --config playwright.config.working.js",
    "test:e2e:epipe-safe": "node scripts/run-playwright-epipe-safe.js",
    "test:e2e:epipe-safe:debug": "node scripts/run-playwright-epipe-safe.js --debug",
    "test:e2e:epipe-safe:headed": "node scripts/run-playwright-epipe-safe.js --headed",
    "test:e2e:epipe-safe:validate": "node scripts/validate-epipe-config.js",
    "test:e2e:stable": "node scripts/run-playwright-stable.js",
    "test:integration": "vitest run tests/api/**/*.test.{ts,tsx} __tests__/api/**/*.test.{ts,tsx} --passWithNoTests --config=vitest.config.ts",
    "test:integration:watch": "jest --config jest.integration.config.js --watch",
    "test:integration:coverage": "jest --config jest.integration.config.js --coverage",
    "test:integration:docker": "docker-compose -f tests/integration/docker-compose.yml up -d && npm run test:integration",
    "test:integration:docker:down": "docker-compose -f tests/integration/docker-compose.yml down",
    "test:db": "npm run test:supabase -- --testNamePattern='Database'",
    "test:e2e:stable:debug": "node scripts/run-playwright-stable.js --headed --debug",
    "test:e2e:stable:basic": "node scripts/run-playwright-stable.js basic-auth-test.spec.ts",
    "test:e2e:epipe-fix": "node scripts/run-stable-tests.js",
    "test:e2e:epipe-fix:auth": "node scripts/run-stable-tests.js auth-flows.spec.ts",
    "test:e2e:epipe-fix:single": "playwright test --config playwright.config.epipe-fix.ts --workers=1",
    "test:e2e:setup": "docker-compose -f docker-compose.test.yml up -d --wait && sleep 15",
    "test:e2e:cleanup": "./scripts/e2e-setup.sh cleanup",
    "test:e2e:validate": "./scripts/e2e-setup.sh validate",
    "test:e2e:validate:full": "./scripts/validate-e2e-environment.sh",
    "test:e2e:env:setup": "./scripts/setup-e2e-environment.sh",
    "test:e2e:env:validate": "./scripts/validate-e2e-environment.sh",
    "test:e2e:validate:config": "node scripts/validate-playwright-config.js",
    "test:e2e:full": "npm run test:e2e:setup && NODE_ENV=test npm run test:e2e && npm run test:e2e:teardown",
    "test:e2e:ci": "npm run test:e2e:setup && npm run test:e2e:enhanced",
    "test:boundaries": "playwright test component-boundaries.spec.ts --project=chromium",
    "test:boundaries:all": "playwright test component-boundaries.spec.ts",
    "test:boundaries:debug": "playwright test component-boundaries.spec.ts --headed --debug --timeout=0",
    "test:boundaries:dashboard": "playwright test component-boundaries.spec.ts -g \"Dashboard Client Component Issues\"",
    "test:boundaries:auth": "playwright test component-boundaries.spec.ts -g \"Login Redirect Flow\"",
    "test:boundaries:supabase": "playwright test component-boundaries.spec.ts -g \"Supabase Client Singleton\"",
    "validate:boundaries": "node validate-component-boundaries.js",
    "test": "vitest run --passWithNoTests --config=vitest.config.ts",
    "test:watch": "vitest --watch --config=vitest.config.ts",
    "test:coverage": "vitest run --coverage --config=vitest.config.ts",
    "test:ci": "npm run validate:components:ci && vitest run --reporter=verbose --config=vitest.config.ts",
    "test:ui": "vitest --ui --config=vitest.config.ts",
    "test:parallel": "vitest run --reporter=verbose --config=vitest.config.ts",
    "test:sequential": "vitest run --pool=forks --poolOptions.forks.singleFork=true --config=vitest.config.ts",
    "test:unit": "vitest run tests/components/**/*.test.{ts,tsx} __tests__/components/**/*.test.{ts,tsx} --passWithNoTests --config=vitest.config.ts",
    "test:security": "node scripts/security-scan.js",
    "test:security-full": "npm audit && node scripts/security-scan.js && npm run test:security-tests",
    "test:security-tests": "jest --testPathPattern=__tests__/lib/security --coverage",
    "test:performance": "playwright test tests/performance",
    "test:performance:rate-limiting": "playwright test tests/performance/rate-limiting.spec.ts",
    "test:performance:bundle-size": "playwright test tests/performance/bundle-size.spec.ts",
    "test:performance:web-vitals": "playwright test tests/performance/web-vitals.spec.ts",
    "test:load": "playwright test tests/load",
    "test:load:concurrent": "playwright test tests/load/concurrent-users.spec.ts",
    "test:lighthouse": "node scripts/lighthouse-ci.js",
    "test:lighthouse:dev": "npm run dev & sleep 10 && npm run test:lighthouse && kill %1",
    "test:all": "npm run test:security && npm run test:coverage && npm run lint && npm run type-check",
    "test:fast": "node scripts/run-tests.js --parallel --no-coverage --bail",
    "test:debug": "node scripts/run-tests.js --verbose --sequential",
    "precommit": "npm run validate:components && npm run test:security && npm run lint && npm run type-check",
    "precommit:fast": "npm run validate:components && node scripts/security-scan.js && npm run lint",
    "prepare": "node -e \"if (process.env.VERCEL !== '1' && process.env.CI !== 'true') { require('child_process').execSync('husky install') }\" || true",
    "coverage:open": "open coverage/lcov-report/index.html",
    "coverage:clean": "rm -rf coverage",
    "infra:setup": "./scripts/test-infrastructure-setup.sh start",
    "infra:stop": "./scripts/test-infrastructure-setup.sh stop",
    "infra:restart": "./scripts/test-infrastructure-setup.sh restart",
    "infra:status": "./scripts/test-infrastructure-setup.sh status",
    "infra:validate": "node scripts/validate-test-infrastructure.js",
    "infra:logs": "docker-compose -f docker-compose.test.yml logs --tail=100",
    "test:infra": "npm run infra:setup && npm run infra:validate && npm run test:e2e:login",
    "env:test": "cp .env.test .env.local",
    "env:cleanup": "rm -f .env.local",
    "supabase:start": "./supabase/start-test-instance.sh",
    "supabase:stop": "docker compose -f supabase/docker-compose.test.yml down --volumes",
    "supabase:reset": "./supabase/reset-test-db.sh",
    "supabase:logs": "docker compose -f supabase/docker-compose.test.yml logs -f",
    "supabase:studio": "open http://localhost:54323",
    "test:supabase": "jest --config=jest.config.test.js --testPathPattern=__tests__/supabase",
    "test:supabase:watch": "jest --config=jest.config.test.js --testPathPattern=__tests__/supabase --watch",
    "test:auth": "npm run test:supabase -- --testNamePattern='Authentication'",
    "test:integration:full": "npm run supabase:start && sleep 10 && npm run test:supabase && npm run supabase:stop",
    "test:e2e:teardown": "docker-compose -f docker-compose.test.yml down --volumes",
    "test:e2e:reset": "npm run test:e2e:teardown && npm run test:e2e:setup",
    "test:e2e:logs": "docker-compose -f docker-compose.test.yml logs --tail=100",
    "test:e2e:with-env": "NODE_ENV=test npm run test:e2e",
    "test:e2e:full:debug": "npm run test:e2e:setup && NODE_ENV=test npm run test:e2e:debug && npm run test:e2e:teardown",
    "test:visual": "playwright test --config=playwright.visual.config.ts --project=visual-chromium",
    "test:visual:all": "playwright test --config=playwright.visual.config.ts",
    "test:visual:mobile": "playwright test --config=playwright.visual.config.ts --project=visual-mobile",
    "test:visual:dark": "playwright test --config=playwright.visual.config.ts --project=visual-dark-theme",
    "test:visual:update": "playwright test --config=playwright.visual.config.ts --update-snapshots",
    "test:visual:ui": "playwright test --config=playwright.visual.config.ts --ui",
    "test:visual:debug": "playwright test --config=playwright.visual.config.ts --debug",
    "test:accessibility": "playwright test --config=playwright.visual.config.ts --project=accessibility-chromium",
    "test:accessibility:all": "playwright test --config=playwright.visual.config.ts --grep='accessibility|aria|keyboard'",
    "test:accessibility:firefox": "playwright test --config=playwright.visual.config.ts --project=accessibility-firefox",
    "test:accessibility:high-contrast": "playwright test --config=playwright.visual.config.ts --project=accessibility-high-contrast",
    "test:accessibility:report": "playwright test --config=playwright.visual.config.ts --project=accessibility-chromium --reporter=json > test-results/accessibility-report.json",
    "test:regression": "npm run test:visual && npm run test:accessibility",
    "test:regression:update": "npm run test:visual:update && npm run test:accessibility",
    "test:animation-removal": "playwright test --config=playwright.visual.config.ts --grep='animation.*removal|wobble|bounce' --project=visual-chromium",
    "test:comprehensive": "node scripts/run-comprehensive-tests.js",
    "test:comprehensive:chromium": "npx playwright test --config=playwright.config.comprehensive.ts --project=chromium-desktop",
    "test:comprehensive:firefox": "npx playwright test --config=playwright.config.comprehensive.ts --project=firefox-desktop",
    "test:comprehensive:webkit": "npx playwright test --config=playwright.config.comprehensive.ts --project=webkit-desktop",
    "test:comprehensive:mobile": "npx playwright test --config=playwright.config.comprehensive.ts --project=mobile-chrome --project=mobile-safari",
    "test:comprehensive:tablet": "npx playwright test --config=playwright.config.comprehensive.ts --project=tablet-chrome --project=tablet-safari",
    "test:comprehensive:routes": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-route-navigation.spec.ts",
    "test:comprehensive:auth": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-auth-flows.spec.ts",
    "test:comprehensive:errors": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-error-scenarios.spec.ts",
    "test:comprehensive:security": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-rbac-security.spec.ts comprehensive-rate-limiting.spec.ts",
    "test:comprehensive:api": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-api-interactions.spec.ts",
    "test:comprehensive:survey": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-survey-flows.spec.ts",
    "test:comprehensive:dashboard": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-dashboard-analytics.spec.ts",
    "test:comprehensive:responsive": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-responsive-behavior.spec.ts",
    "test:comprehensive:cross-browser": "npx playwright test --config=playwright.config.comprehensive.ts comprehensive-cross-browser.spec.ts",
    "test:comprehensive:report": "npx playwright show-report test-results/comprehensive-report",
    "test:comprehensive:debug": "npx playwright test --config=playwright.config.comprehensive.ts --debug",
    "test:comprehensive:ui": "npx playwright test --config=playwright.config.comprehensive.ts --ui"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run precommit",
      "pre-push": "npm run validate:components:all && npm run test:ci"
    }
  },
  "dependencies": {
    "2": "^3.0.0",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^8.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@envelop/depth-limit": "^6.0.0",
    "@floating-ui/dom": "^1.7.3",
    "@floating-ui/react-dom": "^2.1.5",
    "@graphql-tools/load-files": "^7.0.1",
    "@graphql-tools/merge": "^9.1.1",
    "@graphql-tools/schema": "^10.0.25",
    "@heroicons/react": "^2.1.5",
    "@hookform/resolvers": "^3.10.0",
    "@next/third-parties": "^14.2.15",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.1.4",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@react-pdf/renderer": "^4.3.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.53.0",
    "@types/cookie": "^0.6.0",
    "@types/lodash": "^4.17.20",
    "@types/xlsx": "^0.0.35",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cors": "^2.8.5",
    "dataloader": "^2.2.3",
    "date-fns": "^3.6.0",
    "express": "^5.1.0",
    "framer-motion": "^11.0.0",
    "globals": "^16.3.0",
    "graphql": "^16.11.0",
    "graphql-depth-limit": "^1.1.0",
    "graphql-middleware": "^6.1.35",
    "graphql-query-complexity": "^1.1.0",
    "graphql-rate-limit": "^3.3.0",
    "graphql-redis-subscriptions": "^2.7.0",
    "graphql-scalars": "^1.24.2",
    "graphql-subscriptions": "^3.0.0",
    "graphql-tag": "^2.12.6",
    "graphql-upload": "^17.0.0",
    "graphql-upload-ts": "^2.1.2",
    "graphql-yoga": "^5.15.1",
    "html2canvas": "^1.4.1",
    "jsonwebtoken": "^9.0.2",
    "jspdf": "^3.0.1",
    "lodash": "^4.17.21",
    "lucide-react": "^0.263.1",
    "next": "^14.2.15",
    "nodemailer": "^7.0.5",
    "papaparse": "^5.5.3",
    "pdfkit": "^0.17.1",
    "react": "^18.3.1",
    "react-chartjs-2": "^5.3.0",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.62.0",
    "recharts": "^2.12.7",
    "sonner": "^1.7.4",
    "tailwind-merge": "^1.14.0",
    "tailwindcss-animate": "^1.0.7",
    "xlsx": "^0.18.5",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@playwright/test": "^1.54.2",
    "@swc/core": "^1.13.3",
    "@swc/jest": "^0.2.39",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^14.3.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/d3": "^7.4.3",
    "@types/d3-color": "^3.1.3",
    "@types/d3-path": "^3.1.1",
    "@types/d3-shape": "^3.1.7",
    "@types/dotenv": "^6.1.1",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20.12.6",
    "@types/nodemailer": "^6.4.17",
    "@types/papaparse": "^5.3.16",
    "@types/pdfkit": "^0.17.2",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.5",
    "@types/tough-cookie": "^4.0.5",
    "@vitejs/plugin-react": "^4.2.1",
    "@vitest/ui": "^1.6.0",
    "autoprefixer": "^10.4.16",
    "axe-playwright": "^2.0.3",
    "cookie-parser": "^1.4.7",
    "dotenv": "^17.2.1",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.15",
    "eslint-plugin-local-nextjs": "file:eslint-rules",
    "eslint-plugin-react-refresh": "^0.4.20",
    "happy-dom": "^14.12.3",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.5",
    "jest-junit": "^16.0.0",
    "msw": "^2.6.8",
    "node-fetch": "^2.7.0",
    "pg": "^8.11.3",
    "postcss": "^8.4.31",
    "tailwindcss": "^3.3.5",
    "ts-jest": "^29.4.0",
    "typescript": "~5.3.3",
    "undici": "^7.13.0",
    "vitest": "^1.6.0"
  }
}
