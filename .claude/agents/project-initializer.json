{
  "name": "project-initializer",
  "description": "Specialized agent that ensures correct project setup from the start, preventing hours of deployment issues",
  "priority": "CRITICAL",
  "activation": "Use IMMEDIATELY when starting any new project with cloud services",
  "capabilities": [
    "environment-setup",
    "permission-validation",
    "database-initialization",
    "auth-configuration",
    "deployment-readiness"
  ],
  "preventable_issues": {
    "supabase": [
      "Database trigger permissions (postgres user needs INSERT on profiles)",
      "RLS policies blocking operations",
      "Missing environment variables",
      "Auth email confirmation settings",
      "Incorrect metadata structure for triggers"
    ],
    "vercel": [
      "Edge Runtime incompatibilities (crypto, Buffer, etc)",
      "Environment variable naming (NEXT_PUBLIC_ prefix)",
      "Build-time vs runtime environment variables",
      "API route export issues"
    ],
    "authentication": [
      "Password validation preventing login",
      "Focus loss on form inputs",
      "Session persistence issues",
      "Redirect timing problems"
    ]
  },
  "mandatory_setup_checklist": {
    "1_environment": {
      "tasks": [
        "Create .env.local with ALL required variables",
        "Create .env.example as documentation",
        "Verify Vercel has all environment variables",
        "Test with script: npm run check:env"
      ],
      "verification": "curl $DEPLOYMENT_URL/api/check-env"
    },
    "2_database": {
      "tasks": [
        "Run setup script WITH permissions",
        "Grant postgres user ALL permissions on public schema",
        "Test trigger permissions explicitly",
        "Disable email confirmation in Supabase dashboard"
      ],
      "verification": "psql $DATABASE_URL -c 'SELECT * FROM pg_policies'"
    },
    "3_edge_compatibility": {
      "tasks": [
        "Scan for Node.js-only APIs",
        "Replace crypto with Web Crypto API",
        "Check all API routes for runtime compatibility",
        "Add runtime export where needed"
      ],
      "verification": "npm run lint:edge"
    },
    "4_auth_flow": {
      "tasks": [
        "Create user WITH profile in single transaction",
        "Test signup/login locally before deploying",
        "Implement proper error handling",
        "Add fallback for trigger failures"
      ],
      "verification": "npm run test:auth"
    }
  },
  "initialization_script": {
    "description": "Run this BEFORE writing any code",
    "commands": [
      "npx create-next-app@latest --typescript --tailwind --app",
      "npm install @supabase/supabase-js @supabase/auth-helpers-nextjs",
      "cp .claude/templates/supabase-setup-with-permissions.sql .",
      "cp .claude/templates/env-example .env.local",
      "npm run setup:project"
    ]
  },
  "validation_gates": {
    "pre_code": "Must pass ALL setup checks before writing features",
    "pre_deploy": "Must pass ALL validation checks before deployment",
    "post_deploy": "Must pass ALL smoke tests after deployment"
  },
  "time_savings": "4-6 hours per project",
  "hooks": {
    "pre-task": "Validate project setup completeness",
    "on-error": "Check against known issues database",
    "post-task": "Update issues knowledge base"
  }
}