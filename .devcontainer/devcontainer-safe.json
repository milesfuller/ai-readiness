{
  "name": "AI Readiness Dev & Test Environment",
  "image": "mcr.microsoft.com/devcontainers/typescript-node:20-bullseye",
  
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "moby": true,
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/devcontainers/features/postgresql-client:1": {
      "version": "15"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-playwright.playwright",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-azuretools.vscode-docker",
        "mtxr.sqltools",
        "mtxr.sqltools-driver-pg",
        "Orta.vscode-jest",
        "firsttris.vscode-jest-runner"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "playwright.reuseBrowser": false,
        "jest.autoRun": {
          "watch": false
        }
      }
    }
  },

  "forwardPorts": [
    3000,
    54321,
    54322,
    54323,
    54324
  ],

  "postCreateCommand": "bash -c 'if [ -f .devcontainer/setup-test-environment.sh ]; then .devcontainer/setup-test-environment.sh || echo \"Setup script failed but container started\"; fi'",
  
  "postStartCommand": "bash -c 'cd ai-readiness-frontend && if [ -f docker-compose.test.yml ]; then docker compose -f docker-compose.test.yml up -d || echo \"Docker compose failed but container started\"; fi'",

  "remoteUser": "node",
  
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  
  "runArgs": ["--init", "--privileged"],
  
  "remoteEnv": {
    "NODE_ENV": "development",
    "DOCKER_BUILDKIT": "1"
  }
}